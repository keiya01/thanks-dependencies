const PLACEHOLDER: &str = "<!-- Generated by thanks-dependencies -->";

pub fn write_to_readme(readme: String, title: String, content: String) -> String {
    let mut result: Vec<&str> = vec![];

    let mut is_already_written = false;
    let mut is_writing_content = false;
    for line in readme.lines() {
        if line == title {
            is_already_written = true;
            is_writing_content = true;
            result.push(&title);
            result.push(&content);

            continue;
        }
        
        if is_writing_content {
            // We decide this line is title when first word is `#`.
            if line == PLACEHOLDER {
                is_writing_content = false;
            } else {
                continue;
            }
        }

        result.push(line);
    }

    if !is_already_written {
        result.push("");
        result.push(&title);
        result.push(&content);
        result.push(PLACEHOLDER);
    }
    
    result.push("");
    result.join("\n")
}

#[cfg(test)]
mod test {
    use super::*;

    #[test]
    fn test_write_to_readme() {
        let r = write_to_readme(
            r"# Test
abc

## Hello
defg
"
            .to_owned(),
            "## Thanks dependencies".to_owned(),
            r"- Hello
- ABC
- DEF
"
            .to_owned(),
        );
        assert_eq!(
            r,
            r"# Test
abc

## Hello
defg

## Thanks dependencies
- Hello
- ABC
- DEF

<!-- Generated by thanks-dependencies -->
"
        );

        // The case where title is already exist.
        // We only support to write content to end of file.
        let r = write_to_readme(
            r"# Test
abc

## Hello
defg

## Thanks dependencies
- Test

<!-- Generated by thanks-dependencies -->
"
            .to_owned(),
            "## Thanks dependencies".to_owned(),
            r"- Hello
- ABC
- DEF
"
            .to_owned(),
        );
        assert_eq!(
            r,
            r"# Test
abc

## Hello
defg

## Thanks dependencies
- Hello
- ABC
- DEF

<!-- Generated by thanks-dependencies -->
"
        )
    }
}
